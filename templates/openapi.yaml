openapi: 3.1.0

info:
  title: IETF BibXML service
  description: The IETF BibXML service provides an open and public API for its users to fetch references from.
  contact:
    email: ietf-ribose@ribose.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 0.0.1

servers:
- url: /

paths:
  /api/v1/ref/{dataset}/{ref_id}:
    parameters:
    - name: dataset
      in: path
      description: Dataset ID
      required: true
      schema:
        $ref: '#/components/schemas/AvailableDatasets'
    - name: ref_id
      in: path
      description: Standard reference
      required: true
      schema:
        type: string

    get:
      summary: Get citation
      description: Retrieve citation from given dataset by reference.
      operationId: getCitationByReferenceId

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitationDetailsResponse'

        404:
          description: reference not found in given dataset
          content: {}

        500:
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/search:
    post:
      summary: Search citations
      description: Search citations across datasets.
      operationId: searchCitations
      requestBody:
        required: true
        description: Search query
        content:
          application/json:
            schema:
              type: object

      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitationSearchResultResponse'

        500:
          description: operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # LEGACY RESOURCES
  
  # IETF (bibxml) 
  # RFCs:
  /public/rfc/bibxml/reference.RFC.{rfc_num}.xml:
    get:
      summary: Get IETF RFC in bibxml format by number
      parameters:
      - name: rfc_num
        in: path
        description: RFC number
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/xml:
              schema:
                type: string
                format: binary

  # IETF (bibxml3) 
  # Internet-Drafts:
  /public/rfc/{bibxml3}/reference.I-D.{draft_name}.xml:
    get:
      summary: Get IETF RFC draft in bibxml format by name
      parameters:
      - name: draft_name
        in: path
        description: RFC draft name
        required: true
        schema:
          type: string
      - name: bibxml3
        in: path
        description: bibxml3 aliases
        required: true
        schema:
          type: string
          enum:
          - bibxml3
          - bibxml-ids
      responses:
        200:
          description: successful operation
          content:
            text/xml:
              schema:
                type: string
                format: binary
    

  # IETF (bibxml9)
  # BCP, FYI, STD:
  /public/rfc/{bibxml9}/reference.{type}.{rfc_num}.xml:
    get:
      summary: Get IETF RFC draft in bibxml format by name
      parameters:
      - name: rfc_num
        in: path
        description: RFC number
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: RFC type
        required: true
        schema:
          type: string
          enum:
          - BCP
          - FYI
          - STD
      - name: bibxml9
        in: path
        description: bibxml9 aliases
        required: true
        schema:
          type: string
          enum:
          - bibxml9
          - bibxml-rfcsubseries
      responses:
        200:
          description: successful operation
          content:
            text/xml:
              schema:
                type: string
                format: binary

  /public/rfc/{bibxml2}/reference.{dataset_name}.{document_name}.xml:
    get:
      summary: Get Non-IETF reference in bibxml format by name
      parameters:
      - name: document_name
        in: path
        description: RFC number
        required: true
        schema:
          type: string
      - name: dataset_name
        in: path
        description: RFC number
        required: true
        schema:
          type: string
          enum:
          - W3C
          - ISO 
          - ITU
          - ANSI 
          - FIPS
          - CCITT
          - IEEE 
          - OASIS
          - PKCS
      - name: bibxml2
        in: path
        description: bibxml2 aliases
        required: true
        schema:
          type: string
          enum:
          - bibxml2
          #- bibxml-w3c  # (!) conflict with bibxml4 ?
          - bibxml-iso
          - bibxml-itu
          - bibxml-ansi
          - bibxml-fips
          - bibxml-ccitt
          #- bibxml-ieee # (!) conflict with bibxml6 ?
          - bibxml-oasis
          - bibxml-pkcs
      responses:
        200:
          description: successful operation
          content:
            text/xml:
              schema:
                type: string
                format: binary

  # W3C (bibxml4):
  /public/rfc/{bibxml4}/reference.w3c.{document_name}.xml:
    get:
      summary: Get W3C reference in bibxml format by name
      parameters:
      - name: document_name
        in: path
        description: RFC name
        required: true
        schema:
          type: string
      - name: bibxml4
        in: path
        description: bibxml4 aliases
        required: true
        schema:
          type: string
          enum:
          - bibxml4
          - bibxml-w3c  # (!) conflict with bibxml2?
      responses:
        200:
          description: successful operation
          content:
            text/xml:
              schema:
                type: string
                format: binary

  # 3GPP (bibxml5):
  /public/rfc/{bibxml5}/reference.{type}.{document_name}.xml:
    get:
      summary: Get 3GPP reference in bibxml format by name
      parameters:
      - name: document_name
        in: path
        description: RFC name
        required: true
        schema:
          type: string
      - name: type
        in: path
        description: RFC type
        required: true
        schema:
          type: string
          enum:
          - 3gpp
          - sdo-3gpp
      - name: bibxml5
        in: path
        description: bibxml5 aliases
        required: true
        schema:
          type: string
          enum:
          - bibxml5
          - bibxml-3gpp
      responses:
        200:
          description: successful operation
          content:
            text/xml:
              schema:
                type: string
                format: binary

  # IEEE (bibxml6):
  /public/rfc/{bibxml6}/reference.IEEE.{document_name}.xml:
    get:
      summary: Get IEEE reference in bibxml format by name
      parameters:
      - name: document_name
        in: path
        description: RFC name
        required: true
        schema:
          type: string
      - name: bibxml6
        in: path
        description: bibxml6 aliases
        required: true
        schema:
          type: string
          enum:
          - bibxml6
          - bibxml-ieee  # (!) conflict with bibxml2?
      responses:
        200:
          description: successful operation
          content:
            text/xml:
              schema:
                type: string
                format: binary

  # IANA (bibxml8):
  /public/rfc/{bibxml8}/reference.IANA.{document_name}.xml:
    get:
      summary: Get IANA reference in bibxml format by name
      parameters:
      - name: document_name
        in: path
        description: RFC name
        required: true
        schema:
          type: string
      - name: bibxml8
        in: path
        description: bibxml8 aliases
        required: true
        schema:
          type: string
          enum:
          - bibxml8
          - bibxml-iana  # (!) conflict with bibxml2?
      responses:
        200:
          description: successful operation
          content:
            text/xml:
              schema:
                type: string
                format: binary

  # DOI (bibxml7):
  /public/rfc/{bibxml7}/reference.DOI.{doi_id}.xml:
    get:
      summary: Get DOI reference in bibxml format by ID
      parameters:
      - name: doi_id
        in: path
        description: DOI ID
        required: true
        schema:
          type: string
      - name: bibxml7
        in: path
        description: bibxml8 aliases
        required: true
        schema:
          type: string
          enum:
          - bibxml7
          - bibxml-doi
      responses:
        200:
          description: successful operation
          content:
            text/xml:
              schema:
                type: string
                format: binary

components:

  schemas:

    AvailableDatasets:
      type: string
      # TODO: Auto-generate this list at deployment time?
      enum:
      - rfcs
      - ids
      - rfcsubseries
      - misc
      - w3c
      - 3gpp
      - ieee
      - iana
      - doi
      - nist
      description: |
        For up-to-date list of available datasets,
        see bibxml-data-* repositories under ietf-ribose GitHub organization.
        See also bibxml-indexer service README.

    CitationDetailsResponse:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/CitationObject'

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              description: Code for automatic error processing
            message:
              type: string
              description: Human readable error message

    CitationSearchResultResponse:
      type: object
      properties:
        data:
            type: array
            items:
              $ref: '#/components/schemas/CitationObject'

    # TODO:
    # need to verify structure
    CitationObject:
      type: object
      properties:
        id:
          type: string
        date:
          type: object
          properties:
            type:
              type: string
            value:
              type: string
          #required:
          #- type
          #- value
        link:
          type: object
          properties:
            type:
              type: string
            content:
              type: string
          #required:
          #- type
          #- content
        type:
          type: string
        docid:
          type: array
          items:
            type: object
        place:
          type: string
        title:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              format:
                type: string
              script:
                type: string
              content:
                type: string
              language:
                type: string
            #required:
            #- type
            #- format
            #- script
            #- content
            #- language
        script:
          type: string
        doctype:
          type: string
        revdate:
          type: string
        contributor:
          type: object
          properties:
            role:
              type: string
            organization:
              type: object
              properties:
                name:
                  type: string
                abbreviation:
                  type: string
              #required:
              #- name
              #- abbreviation
          #required:
          #- role
          #- organization
      required:
      - docid
      - doctype
